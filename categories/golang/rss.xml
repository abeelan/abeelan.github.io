<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Golang on ABEE</title><link>https://abeelan.github.io/categories/golang/</link><description>Recent content in Golang on ABEE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 25 Jun 2023 13:53:54 +0000</lastBuildDate><atom:link href="https://abeelan.github.io/categories/golang/rss.xml" rel="self" type="application/rss+xml"/><item><title>Golang - Go 学习资料汇总</title><link>https://abeelan.github.io/tech/golang/go-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</link><pubDate>Sun, 25 Jun 2023 13:53:54 +0000</pubDate><guid>https://abeelan.github.io/tech/golang/go-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</guid><description>Go 语言学习资料与社区索引 鉴于之前有人做的 索引资料 已经过期超过 ~2~3 年，所以特开此坑。各位同学可以通过发起 Fork + Pull Request 的方式进行补充和更新。 最后更新时</description></item><item><title>Golang - 测试平台搭建</title><link>https://abeelan.github.io/tech/golang/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</link><pubDate>Wed, 14 Jun 2023 14:03:34 +0000</pubDate><guid>https://abeelan.github.io/tech/golang/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA/</guid><description>数据库 # 扬帆测试平台部署 $ docker run -d -host --name yangfan-mysql \ -p 13306:3306 \ -v $volume/yangfan/mysql:/var/lib/mysql \ -e MYSQL_ROOT_HOST=% \ -e MYSQL_ROOT_PASSWORD=12345 \ mysql:8.0 # --character-set-server=utf8mb4 报错 # --collation-server=utf8mb4_unicode_ci # 1.拷贝SQL文件到mysql容器中 $ docker cp docs/sql/yangfan.sql yangfan-mysql:/yangfan.sql Successfully copied 270.8kB to mysql:/yangfan.sql # 2.</description></item><item><title>Golang - Gorm 介绍及使用</title><link>https://abeelan.github.io/tech/golang/gorm-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 13 Jun 2023 18:32:07 +0000</pubDate><guid>https://abeelan.github.io/tech/golang/gorm-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid><description>中文文档：https://learnku.com/docs/gorm/v2/index/9728 简介 orm 是一种数据库操作辅助工具 在 go 的结构体和</description></item><item><title>Golang - Gin Restful请求方式</title><link>https://abeelan.github.io/tech/golang/gin-restful%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F/</link><pubDate>Tue, 13 Jun 2023 00:03:19 +0000</pubDate><guid>https://abeelan.github.io/tech/golang/gin-restful%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F/</guid><description>四大请求方式 package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/gin-gonic/gin&amp;#34; ) /* 实现文章接口的增删改查 */ type ArticleModel struct { Title string `json:&amp;#34;title&amp;#34;` Content string `json:&amp;#34;content&amp;#34;` } type ResponseModel struct { Code int `json:&amp;#34;code&amp;#34;` Data any `json:&amp;#34;data&amp;#34;` Msg string `json:&amp;#34;msg&amp;#34;` } func getList(ctx *gin.Context) { // 需要搜索、分页 articles := []ArticleModel{ {&amp;#</description></item></channel></rss>