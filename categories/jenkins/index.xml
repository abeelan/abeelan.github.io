<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>jenkins on ABEE</title>
    <link>https://abeelan.github.io/categories/jenkins/</link>
    <description>Recent content in jenkins on ABEE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Sep 2021 18:38:09 +0800</lastBuildDate><atom:link href="https://abeelan.github.io/categories/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jenkins - 安卓打包流程构建</title>
      <link>https://abeelan.github.io/posts/tech/jenkins/jenkins-apk-build/</link>
      <pubDate>Tue, 07 Sep 2021 18:38:09 +0800</pubDate>
      
      <guid>https://abeelan.github.io/posts/tech/jenkins/jenkins-apk-build/</guid>
      <description>测试 APP 构建、打包过程 准备 安卓源码 # https://github.com/princeqjzh/AndroidSampleApp.git $ git clone git@github.com:princeqjzh/AndroidSampleApp.git 安卓打包命令 # clean 清空 build 目录下的构建文件 # assemble 打包；比如 assembleRealese 或者渠道包 $ gradlew clean assembleDebug # APK 输出路径 # /app/build/outputs/apk/debug/app-debug.apk 打包环境要求 JDK Android SDK Gradle 编译完成后安装包 $ adb install app-debug.apk Success 总结 配置 job 1 用于构建 APP； 配置 job 2 用于构建 自动化测试（子节点 - 模拟器运行）； 父子关联（job 1 添加稳</description>
    </item>
    
    <item>
      <title>Jenkins - 接口自动化测试流水线搭建</title>
      <link>https://abeelan.github.io/posts/tech/jenkins/jenkins-pipline-esbook/</link>
      <pubDate>Tue, 07 Sep 2021 18:38:09 +0800</pubDate>
      
      <guid>https://abeelan.github.io/posts/tech/jenkins/jenkins-pipline-esbook/</guid>
      <description>1、安装 Jenkins 插件 Extended Choice Parameter：参数化 stage view：用于展示流水线进度视图 groovy postbuild：执行 groovy 脚本请求 allure：报告展示 2、安装 allure 安装 node 先安装 node，未安装 node 直接启动 allure 会报错：/usr/bin/env: node: No such file or directory # 创建安装目录 $ mkdir node &amp;amp;&amp;amp; cd node # 下载安装包 $ wget https://npm.taobao.org/mirrors/node/v15.8.0/node-v15.8.0-linux-x64.tar.gz # 解</description>
    </item>
    
    <item>
      <title>Jenkins - 接口压力测试持续集成</title>
      <link>https://abeelan.github.io/posts/tech/jenkins/jenkins-%E6%8E%A5%E5%8F%A3%E5%8E%8B%E5%8A%9B%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sat, 28 Aug 2021 17:20:15 +0800</pubDate>
      
      <guid>https://abeelan.github.io/posts/tech/jenkins/jenkins-%E6%8E%A5%E5%8F%A3%E5%8E%8B%E5%8A%9B%E5%AE%9E%E6%88%98/</guid>
      <description>&lt;p&gt;接口压力测试实战，集成到 jenkins 项目。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins - 接口自动化测试持续集成</title>
      <link>https://abeelan.github.io/posts/tech/jenkins/jenkins-%E6%8E%A5%E5%8F%A3%E5%8A%9F%E8%83%BD%E5%AE%9E%E6%88%98/</link>
      <pubDate>Sat, 28 Aug 2021 17:20:02 +0800</pubDate>
      
      <guid>https://abeelan.github.io/posts/tech/jenkins/jenkins-%E6%8E%A5%E5%8F%A3%E5%8A%9F%E8%83%BD%E5%AE%9E%E6%88%98/</guid>
      <description>接口功能自动化测试项目集成到 jenkins 实战。 安装 python 在 jenkins 容器内安装 python 执行环境 $ docker exec -it -u root jenkins /bin/bash $ cat /etc/issue Debian GNU/Linux 1 # 根据 debian 版本更新下载源 # https://blog.csdn.net/lan_yangbi/article/details/86720257 $ apt-get update # 下载安装包 $ apt-get install wget $ wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz $ tar -zxvf Python-3.6.8.tgz # 编译安装 $ cd Python-3.6.8 $ ./configure --prefix=/opt/python3 --with-ssl $ apt-get -y install gcc automake autoconf libtool make $ apt-get -y install make* $ apt-get -y install zlib* $ apt-get -y install openssl libssl-dev $ apt-get install sudo $ make &amp;amp;&amp;amp; make install # 软链 $ ln -s /opt/python3/bin/python3.6 /usr/bin/python $ ln -s /opt/python3/bin/pip3 /usr/bin/pip 配</description>
    </item>
    
    <item>
      <title>jenkins - 环境搭建</title>
      <link>https://abeelan.github.io/posts/tech/jenkins/jenkins/</link>
      <pubDate>Fri, 27 Aug 2021 14:03:35 +0800</pubDate>
      
      <guid>https://abeelan.github.io/posts/tech/jenkins/jenkins/</guid>
      <description>持续集成测试流程记录。 jenkins 搭建 # 创建或者映射 docker 文件映射卷；二选一 $ docker volume create jenkins # 创建新的映射卷 $ docker volume inspect jenkins # 本地文件映射 # 创建容器;lts 长期维护版本，稳定版本 $ docker run -d --name jenkins -p 8080:8080 -p 5000:5000 -v {本地目录}/jenkins:/var/jenkins_home jenkins/jenkins:lts # 获得管理员密码 $ docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword 插件 可以先配</description>
    </item>
    
  </channel>
</rss>
