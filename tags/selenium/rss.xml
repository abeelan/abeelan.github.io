<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium on ABEE</title><link>https://abeelan.github.io/tags/selenium/</link><description>Recent content in Selenium on ABEE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 22 Nov 2022 12:13:59 +0000</lastBuildDate><atom:link href="https://abeelan.github.io/tags/selenium/rss.xml" rel="self" type="application/rss+xml"/><item><title>发起API请求seleniumwire</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%8F%91%E8%B5%B7api%E8%AF%B7%E6%B1%82seleniumwire/</link><pubDate>Tue, 22 Nov 2022 12:13:59 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%8F%91%E8%B5%B7api%E8%AF%B7%E6%B1%82seleniumwire/</guid><description>SeleniumWire 是 Selenium 的扩展，可以获取浏览器发出的请求数据。编写代码方式不变，增加额外的 API 来检查请求和响应并即时更改它们。 特性 纯 Python，用户友好的 API 捕</description></item><item><title>chromedriver</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/chromedriver/</link><pubDate>Tue, 22 Nov 2022 11:55:25 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/chromedriver/</guid><description>批量杀死 chromedriver 进程 $ ps -ef \ | grep chromedriver | grep -v grep \ | awk &amp;#39;{print $2}&amp;#39; \ | awk &amp;#39;BEGIN{RS=&amp;#34;&amp;#34;;FS=&amp;#34;\n&amp;#34;;OFS=&amp;#34; &amp;#34;}{$1=$1;print $0}&amp;#39; \ | xargs kill -9</description></item><item><title>调试阶段复用浏览器</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E8%B0%83%E8%AF%95%E9%98%B6%E6%AE%B5%E5%A4%8D%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8/</link><pubDate>Mon, 21 Nov 2022 17:26:37 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E8%B0%83%E8%AF%95%E9%98%B6%E6%AE%B5%E5%A4%8D%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8/</guid><description>selenium debug 模式，远程调试，复用浏览器。 场景 比如测试京东购物流程，必须扫码登录成功后，才能进行后续操作。 用例编写调试时，每次运行都会打开一个新的浏览</description></item><item><title>使用cookies</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E4%BD%BF%E7%94%A8cookies/</link><pubDate>Mon, 21 Nov 2022 14:35:43 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E4%BD%BF%E7%94%A8cookies/</guid><description>WebDriver 与 cookie 进行交互的方法。 cookie 通常用于网站识别用户的身份，保持登录状态或追踪用户浏览记录。 Name：cookie 的名称 Value：cookie 的值</description></item><item><title>执行js脚本</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E6%89%A7%E8%A1%8Cjs%E8%84%9A%E6%9C%AC/</link><pubDate>Sun, 20 Nov 2022 19:25:49 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E6%89%A7%E8%A1%8Cjs%E8%84%9A%E6%9C%AC/</guid><description>在当前窗口或框架上下文中，执行 JavaScript 脚本。 使用JavaScript操作页面： 解决点击不生效的问题 页面滚动 修改元素属性 JavaScript // 进入浏览器 -&amp;gt; 检查 -&amp;gt; console // 获</description></item><item><title>动作接口</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%8A%A8%E4%BD%9C%E6%8E%A5%E5%8F%A3/</link><pubDate>Fri, 18 Nov 2022 21:11:48 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%8A%A8%E4%BD%9C%E6%8E%A5%E5%8F%A3/</guid><description>用于向 Web 浏览器提供虚拟化输入操作的低级接口。 键盘输入 鼠标输入 笔或触摸设备的指针输入 滚轮输入（v4.2+） 实现动作交互依赖ActionChai</description></item><item><title>页面弹框alert操作</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E9%A1%B5%E9%9D%A2%E5%BC%B9%E6%A1%86alert%E6%93%8D%E4%BD%9C/</link><pubDate>Thu, 17 Nov 2022 14:17:46 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E9%A1%B5%E9%9D%A2%E5%BC%B9%E6%A1%86alert%E6%93%8D%E4%BD%9C/</guid><description>Selenium 页面消息框处理2 alert：警告消息框 confirm：确认消息框 prompt：提示消息对话框 还有一种是页面弹框，类似百度登录，这种可以直接</description></item><item><title>多frame定位</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%A4%9Aframe%E5%AE%9A%E4%BD%8D/</link><pubDate>Wed, 16 Nov 2022 17:29:41 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%A4%9Aframe%E5%AE%9A%E4%BD%8D/</guid><description>frame 简介 frame 是 html 中的框架导航。同一个框架集中，点击某一框架的超链接，内容会在另一个框架的窗口中展示。 比如后台管理页面，点击左侧导航栏按钮，在右侧</description></item><item><title>无头浏览器</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E6%97%A0%E5%A4%B4%E6%B5%8F%E8%A7%88%E5%99%A8/</link><pubDate>Tue, 15 Nov 2022 14:15:11 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E6%97%A0%E5%A4%B4%E6%B5%8F%E8%A7%88%E5%99%A8/</guid><description># 打印浏览器页面，要求为无头浏览器 from selenium.webdriver.common.print_page_options import PrintOptions print_options = PrintOptions() print_options.page_ranges = [&amp;#39;1-2&amp;#39;] driver.get(&amp;#34;printPage.html&amp;#34;) base64code = driver.print_page(print_options) from seleniumwire import webdriver options = webdriver.ChromeOptions() options.add_argument(&amp;#39;--headless=True&amp;#39;) # 无头浏览器模式 options.add_argument(&amp;#39;disable-infobars&amp;#39;) # 隐藏提示：&amp;#34;Chrome正在受到自</description></item><item><title>窗口操作</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 15 Nov 2022 12:36:59 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C/</guid><description>selenium 窗口处理相关操作。 窗口操作 # 窗口最大化 driver.maximize_window() # 窗口最小化 driver.minimize_window() # 窗口全屏化 driver.fullscreen_window() # 获取窗口大小 size = driver.get_window_size() width = size.get(&amp;#34;width&amp;#34;) height = size.get(&amp;#34;height&amp;#34;) # 设置窗口大小 driver.set_window_size(1024, 768) # 获取窗口左上角坐标</description></item><item><title>三种等待方式</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E4%B8%89%E7%A7%8D%E7%AD%89%E5%BE%85%E6%96%B9%E5%BC%8F/</link><pubDate>Mon, 14 Nov 2022 15:47:38 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E4%B8%89%E7%A7%8D%E7%AD%89%E5%BE%85%E6%96%B9%E5%BC%8F/</guid><description>selenium 三种等待方式演示。 强制等待 隐式等待 显式等待 强制等待 import time # 整个程序强制等待 3 秒 time.sleep(3) 隐式等待 设置一个全局的等待时间，以隐式等待找到元素或完成命令</description></item><item><title>八大定位方式</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%85%AB%E5%A4%A7%E5%AE%9A%E4%BD%8D%E6%96%B9%E5%BC%8F/</link><pubDate>Sun, 13 Nov 2022 20:30:14 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%85%AB%E5%A4%A7%E5%AE%9A%E4%BD%8D%E6%96%B9%E5%BC%8F/</guid><description>对元素的操作方法 # 点击元素 ele.click() # 输入文本 ele.send_keys(&amp;#34;hello world&amp;#34;) # 上传图片 # input 标签可以直接使用 send_keys(文件地址) 上传文件 driver.get(&amp;#34;https://image.baidu.com/&amp;#34;) driver.find_element(By.ID, &amp;#34;sttb&amp;#34;).click() driver.find_element(By.ID, &amp;#34;stfile&amp;#34;).send_keys(&amp;#34;/Users/lan/Pictures/7.jpeg&amp;#34;) sleep(10) # 获取元素的尺寸 ele.size</description></item><item><title>分布式执行seleniumgrid</title><link>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%88%86%E5%B8%83%E5%BC%8F%E6%89%A7%E8%A1%8Cseleniumgrid/</link><pubDate>Wed, 25 Aug 2021 11:08:05 +0000</pubDate><guid>https://abeelan.github.io/%E6%8A%80%E6%9C%AF%E6%A0%88/selenium/%E5%88%86%E5%B8%83%E5%BC%8F%E6%89%A7%E8%A1%8Cseleniumgrid/</guid><description>Selenium Grid : 将客户端发送的命令转发到远程浏览器上执行 WebDriver 脚本。 简介 Selenium Grid 是由一个 hub 服务和若干个 node 代理节点组成。 Hub 调度服务，管理各个代理节点的注册信息和</description></item></channel></rss>